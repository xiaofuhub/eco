$PBExportHeader$f_anno_with_ds.srf
global type f_anno_with_ds from function_object
end type

forward prototypes
global function string f_anno_with_ds (string as_string)
end prototypes

global function string f_anno_with_ds (string as_string);long li_cnt, i, li_cur, li_linecnt
string ls_char, ls_word, ls_line, ls_wordold, ls_lineold, ls_out

ls_line = ""
ls_word = ""
ls_out=""
li_cur = 1
li_cnt=len(as_string)
n_cst_string		lnv_string


// First remove the newline characters from annotation.
as_string=trim(as_string)
as_string = lnv_string.of_GlobalReplace(as_string, '~r~n', " ")
for i = 1 to li_cnt
	ls_char = mid(as_string, i, 1)
	if ls_char = " "  then
		// just ended a word
		if len(ls_word) + len(ls_line) + 1 > 50  then
			// this word would make the line too long so wrap
			ls_out =ls_out+ trim(ls_line)+"~r~n~r~n"
			if ls_char=' ' then
				ls_line = ls_word + " "
			end if
			ls_word = ""
		else
			// not too long, so add it to line
			if ls_char=' ' then
				ls_line = ls_line +  ls_word + " "
			end if
			ls_word = ""
		end if
	else
		// still in a word
		ls_word = ls_word + ls_char
	end if// ls_char=" " or ls_char=","
	if i=li_cnt then
		ls_line=ls_line +ls_word
		ls_out=ls_out+ls_line
	end if
next
return ls_out

end function

